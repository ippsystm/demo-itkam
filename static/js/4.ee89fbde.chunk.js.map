{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength20","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messageElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sGCWnKC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACtC,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCDnBC,EAJC,SAACT,GACb,OAAO,yBAAKG,UAAWC,IAAEC,QAASL,EAAMU,U,iCCsCtCC,EAAcC,YAAiB,IAc/BC,EAAuBC,YAAU,CACnCC,KAAM,wBADmBD,EAbN,SAACd,GACpB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAK,iBAC1Ba,SAAU,CAACC,IAAUX,GACrBY,YAAY,wBAEvB,6BAAK,6CASFC,EAnDC,SAACxB,GAEb,IAAIyB,EAAQzB,EAAM0B,YACdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMuB,IAAKD,EAAE5B,GAAIA,GAAI4B,EAAE5B,QACrF8B,EAAkBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASqB,IAAKG,EAAEhC,QAalF,OAAIF,EAAMmC,OAEN,yBAAKhC,UAAWC,IAAEwB,SACd,yBAAKzB,UAAWC,IAAEgC,cACZT,GAEN,yBAAKxB,UAAWC,IAAE6B,UACd,6BAAMD,GAGN,kBAACnB,EAAD,CAAqBG,SAdb,SAACqB,GACjBrC,EAAMsC,YAAYD,EAAOE,qBAGJ,kBAAC,IAAD,CAAUhC,GAAI,Y,wCCtBvCiC,EAA6B,SAACf,GAAD,MAAY,CACzCU,OAAQV,EAAMgB,KAAKN,S,OCqBRO,sBACXC,aArBkB,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACkB,GACtB,MAAO,CAIHN,YAAa,SAACC,GACVK,EAASC,YAAmBN,UDTR,SAACO,GAAe,IACtCC,EADqC,uKAInC,OAAIC,KAAKhD,MAAMmC,OACR,kBAACW,EAAcE,KAAKhD,OADG,kBAAC,IAAD,CAAUO,GAAG,eAJR,GACX0C,IAAMH,WAUtC,OAFqCH,YAAQH,EAARG,CAAoCI,KCS9DL,CAGZlB","file":"static/js/4.ee89fbde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__ZLZA7\",\"dialogsItems\":\"Dialogs_dialogsItems__34U5F\",\"active\":\"Dialogs_active__2XjkO\",\"messages\":\"Dialogs_messages__o634w\",\"message\":\"Dialogs_message__1dJ2V\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id}/> );\r\n    let messageElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    //let newMessageBody = state.newMessageBody;\r\n    //let newMessageElement = React.createRef();\r\n    //let addMessage = () => { alert(newMessageElement.current.value) }\r\n    /*let onSendMessageClick = () => { props.sendMessage(); }*/\r\n    /*let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBody(body);\r\n    }*/\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if(!props.isAuth) return <Redirect to={\"/login\"} />;\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElements}</div>\r\n                {/*<div><textarea value={newMessageBody} onChange={onNewMessageChange}placeholder='Enter your message'></textarea></div>\r\n                <div><button onClick={onSendMessageClick}>Send</button></div>*/}\r\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name=\"newMessageBody\"\r\n                       validate={[required, maxLength20]}\r\n                       placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm  = reduxForm({\r\n    form: 'dialogAddMessageForm' // a unique name for the form\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            //debugger\r\n            if(!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        /*updateNewMessageBody: (body) => {//\r\n            dispatch(updateNewMessageBodyCreator(body))\r\n        },*/\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\n/*let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\nexport default DialogsContainer;*/\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs)//будет закидывать компоненты снизу вверх"],"sourceRoot":""}