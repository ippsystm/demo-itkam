{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","alt","Post","item","message","likesCount","MyPosts","React","memo","postsElements","posts","reverse","map","p","key","id","postsBlock","AddPostReduxForm","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","TextArea","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","isAuth","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","withRouter"],"mappings":"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","file":"static/js/3.d7b03ef0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__21dAG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2dCjd\",\"posts\":\"MyPosts_posts__1m4SI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2JCoQ\"};","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    /*let stateWithSetState = useState(true);\r\n    let editMode = stateWithSetState[0];\r\n    let setEditMode = stateWithSetState[1];*/\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n         setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateMode}>{props.status || '----'}yo</span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange}  autoFocus={true} onBlur={deactivateEditMode}\r\n                value={status}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Loading/Global\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/*<div><img src='/bouts.jpg'></img></div>*/}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} alt=\"\"/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return <div>\r\n    <div className={s.item}>\r\n      <img src='https://im0-tub-by.yandex.net/i?id=257a9951b878479d8c4336df0a004c5a&n=13&exp=1' alt=\"\"/>\r\n          {props.message}\r\n          <div>\r\n        <span>like</span>{props.likesCount}\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormControls/FormControls\";\r\n\r\n/*let postsElements = posts.map ( p => <Post message={p.message} likesCount={p.likesCount}/>)*/\r\n\r\nconst MyPosts = React.memo(props => {\r\n    //console.log(\"RENDER MY POSTS\");\r\n    let postsElements = [...props.posts].reverse()\r\n        .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    //let newPostElement = React.createRef();\r\n    //let onAddPost = () => { props.addPost(); }\r\n    /*let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    }*/\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return <div className={s.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <AddPostReduxForm onSubmit={onAddPost}/>\r\n        {/*<div><textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/></div>\r\n        <div><button onClick={onAddPost}>Add post</button></div>  */}\r\n        <div className={s.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={TextArea} name=\"newPostText\" placeholder=\"Enter your post\"\r\n                validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst AddPostReduxForm  = reduxForm({ form: 'profileAddNewPostForm' })(AddNewPostForm)\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n//import StoreContext from \"../../../storeContext\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        /*updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },*/\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n\r\n/*const MyPostsContainer = (props) => {\r\n    return <StoreContext.Consumer>\r\n        {\r\n            (store) => {\r\n                let state = store.getState();\r\n                let addPost = () => {\r\n                    store.dispatch(addPostActionCreator());\r\n                }\r\n                let onPostChange = (text) => {\r\n                    let action = updateNewPostTextActionCreator(text);\r\n                    store.dispatch(action);\r\n                }\r\n                return <MyPosts updateNewPostText={onPostChange}\r\n                                addPost={addPost}\r\n                                posts={state.profilePage.posts}\r\n                                newPostText={state.profilePage.newPostText}/>\r\n            }\r\n        }\r\n    </StoreContext.Consumer>\r\n}*/","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            if(this.props.isAuth){\r\n                userId = this.props.authorizedUserId;\r\n            }\r\n            else {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        //debugger\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        //debugger\r\n        //console.log(\"RENDER PROFILE CONTAINER\");\r\n        return (//{...this.props} правильное раскукоживание props-ов\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n/*let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\nexport default connect(mapStateToProps, {getUserProfile}) (WithUrlDataContainerComponent);*/\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}